name: CI PR Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ "feature/**", "fix/**" ]

jobs:
  lint-powershell:
    name: Lint PowerShell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module PSScriptAnalyzer -Scope CurrentUser -Force -SkipPublisherCheck
      - name: Run PSScriptAnalyzer
        shell: pwsh
        run: |
          Import-Module PSScriptAnalyzer
          $settings = 'config/PSScriptAnalyzerSettings.psd1'
          $results = Get-ChildItem -Path . -Recurse -Filter '*.ps1' | Invoke-ScriptAnalyzer -Settings $settings
          $results | ConvertTo-Json -Depth 5 | Set-Content -Path analyzer-report.json -Encoding utf8NoBOM
          $errors = @($results | Where-Object Severity -eq 'Error')
          if ($errors.Count -gt 0) {
            Write-Host "Found $($errors.Count) analyzer errors."; exit 1
          }
      - name: Upload analyzer report
        uses: actions/upload-artifact@v4
        with:
          name: analyzer-report
          path: analyzer-report.json

  pester-tests:
    name: Pester Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck
          Import-Module Pester
      - name: Run Pester
        shell: pwsh
        run: |
          Import-Module Pester
          $conf = [Pester.Configuration]::Default
          $conf.Run.Path = 'tests'
          $conf.TestResult.Enabled = $true
          $conf.TestResult.OutputPath = 'TestResults.xml'
          $conf.TestResult.OutputFormat = 'JUnitXml'
          Invoke-Pester -Configuration $conf
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-results
          path: TestResults.xml

  evidence-schema:
    name: Evidence Schema Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate Evidence Schemas (WhatIf)
        shell: pwsh
        run: |
          pwsh -NoProfile -File scripts/Validate-EvidenceSchemas.ps1 -WhatIf
      - name: Upload evidence outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: evidence-schema
          path: |
            docs/_evidence/**

  preflight:
    name: Preflight (WhatIf)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Preflight (WhatIf + SaveEvidence)
        shell: pwsh
        run: |
          pwsh -NoProfile -File scripts/Run-Preflight.ps1 -WhatIf -SaveEvidence
      - name: Upload preflight evidence
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preflight-evidence
          path: |
            docs/_evidence/**
