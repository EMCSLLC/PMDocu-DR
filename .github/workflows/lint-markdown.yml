name: üìù Lint Markdown

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      fail_on_warning:
        description: 'Fail build on Markdown warnings (true/false)'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:
  lint-markdown:
    runs-on: windows-latest
    name: Lint Markdown Files

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: üßæ Run Markdown Linter
        shell: pwsh
        run: |
          Write-Information "[ci-md] Running markdown compliance test..."
          $EvidenceDir = 'docs/_evidence'
          New-Item -ItemType Directory -Force -Path $EvidenceDir | Out-Null

          $Timestamp = Get-Date -Format 'yyyyMMdd-HHmmss'
          $OutFile = Join-Path $EvidenceDir "MarkdownReport-$Timestamp.json"
          $Config = 'config/.markdownlint.json'

          # Run CLI cleanly and capture JSON
          $results = & npx markdownlint-cli2 '**/*.md' '#node_modules' --config $Config --json 2>$null | Out-String
          if ([string]::IsNullOrWhiteSpace($results)) { $results = '[]' }

          $results | Out-File -FilePath $OutFile -Encoding utf8 -NoNewline
          Write-Information "[ci-md] Evidence written to $OutFile"

          # Fail if any lint issues
          if ($results -match 'MD\d{3}') {
              Write-Error "[ci-md] ‚ùå Markdown lint issues detected."
              exit 1
          } else {
              Write-Information "[ci-md] ‚úÖ Markdown lint passed cleanly."
          }

      - name: üîç Validate JSON Evidence
        shell: pwsh
        run: |
          Write-Information "[ci-md] Verifying JSON evidence integrity..."
          $files = Get-ChildItem 'docs/_evidence' -Filter 'MarkdownReport-*.json' | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $files) { Write-Error "[ci-md] ‚ùå No JSON evidence found."; exit 1 }

          try {
              $null = Get-Content $files.FullName -Raw -Encoding UTF8 | ConvertFrom-Json
              Write-Information "[ci-md] ‚úÖ $($files.Name) is valid JSON."
          }
          catch {
              Write-Error "[ci-md] ‚ùå Invalid JSON format in $($files.Name)."
              exit 1
          }

      - name: üìú Upload Markdown Evidence
        uses: actions/upload-artifact@v4
        with:
          name: markdown-evidence
          path: docs/_evidence/MarkdownReport-*.json
          retention-days: 30
