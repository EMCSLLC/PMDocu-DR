name: üßæ Build Governance PDFs

on:
  push:
    paths:
      - "docs/gov/**/*.md"
      - "scripts/Convert-PMDocuDRToPDF.ps1"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-governance-docs:
    name: Convert & Sign Governance PDFs
    runs-on: windows-latest

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üîè Import GPG key for signing
        shell: pwsh
        env:
          GPG_PRIVATE_KEY_B64: ${{ secrets.CI_GPG_PRIVATE_KEY_B64 }}
          GPG_PUBLIC_KEY_B64:  ${{ secrets.CI_GPG_PUBLIC_KEY_B64 }}
          GPG_KEY_ID:          0B57BB923F762D1E
          GPG_PASSPHRASE:      ${{ secrets.CI_GPG_PASSPHRASE }}
        run: pwsh scripts/setup-gpg-signing-ci.ps1

      - name: üîß Install Pandoc & LaTeX
        run: |
          choco install pandoc -y
          choco install miktex -y

      - name: üßæ Convert Governance Markdown ‚Üí PDF
        shell: pwsh
        run: |
          $GovDir = "docs/gov"
          $Files = Get-ChildItem $GovDir -Filter *.md
          if (-not $Files) {
              Write-Warning "No governance Markdown files found to convert."
              exit 0
          }
          foreach ($f in $Files) {
              Write-Output "üìÑ Converting $($f.Name)..."
              pwsh -NoProfile -File "scripts/Convert-PMDocuDRToPDF.ps1" -InputFile $f.FullName
          }

      - name: üîè Verify and sign all PDFs
        shell: pwsh
        run: |
          $PdfDir = "docs/releases"
          $Pdfs = Get-ChildItem $PdfDir -Filter *.pdf
          if (-not $Pdfs) {
              Write-Warning "No PDFs found to sign."
              exit 0
          }
          foreach ($pdf in $Pdfs) {
              pwsh -NoProfile -File "scripts/sign-gpg.ps1" -File $pdf.FullName
          }

      - name: üì¶ Upload Governance PDFs
        uses: actions/upload-artifact@v4
        with:
          name: governance-pdfs
          path: docs/releases/*.pdf
          retention-days: 90

      - name: üßæ Record Evidence JSON
        shell: pwsh
        run: |
          $Root = (Get-Location).Path
          pwsh -NoProfile -File "scripts/Build-GovDocsEvidence.ps1" -Root $Root
