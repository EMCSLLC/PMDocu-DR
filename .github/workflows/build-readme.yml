name: 🪶 Build README

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/_templates/README.template.md'
      - '.github/workflows/build-readme.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-readme:
    name: 🪶 Generate and Commit README
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git describe to see tags

      - name: ⚙️ Setup PowerShell
        uses: PowerShell/PowerShell@v1
        with:
          pwsh-version: '7.5.0'

      - name: 🧩 Generate README.md from template
        id: generate
        run: |
          $ErrorActionPreference = 'Stop'

          $templatePath = 'docs/_templates/README.template.md'
          $outputPath   = 'README.md'

          if (-not (Test-Path $templatePath)) {
            throw "Template not found: $templatePath"
          }

          $template = Get-Content -Path $templatePath -Raw

          # --- Gather repo metadata ---
          $repoOwner  = "${{ github.repository_owner }}"
          $repoName   = (Split-Path ${{ github.repository }} -Leaf)
          $buildDate  = (Get-Date).ToString('yyyy-MM-dd HH:mm:ss UTC')
          $nextReview = (Get-Date).AddMonths(6).ToString('yyyy-MM')

          # --- Detect version from Git tag ---
          $gitTag = (git describe --tags --abbrev=0 2>$null)
          if (-not $gitTag) {
            Write-Output "No Git tag found; defaulting version to v1.0"
            $gitTag = 'v1.0'
          }

          # --- Perform placeholder injection ---
          $output = $template `
            -replace '{{REPO_OWNER}}', $repoOwner `
            -replace '{{REPO_NAME}}', $repoName `
            -replace '{{VERSION}}', $gitTag `
            -replace '{{BUILD_DATE}}', $buildDate `
            -replace '{{NEXT_REVIEW}}', $nextReview

          $output | Out-File -FilePath $outputPath -Encoding UTF8 -Force

          # --- Capture SHA for evidence ---
          $sha = (Get-FileHash -Algorithm SHA256 -Path $outputPath).Hash
          $evidence = @{
            file = $outputPath
            generated = $buildDate
            commit = '${{ github.sha }}'
            hash = $sha
            repo = '${{ github.repository }}'
            version = $gitTag
          }

          $evidenceDir = "docs/_evidence"
          if (-not (Test-Path $evidenceDir)) {
            New-Item -ItemType Directory -Force -Path $evidenceDir | Out-Null
          }

          $jsonPath = Join-Path $evidenceDir ("ReadmeBuild-{0}.json" -f (Get-Date -Format 'yyyyMMdd-HHmmss'))
          $evidence | ConvertTo-Json | Out-File -FilePath $jsonPath -Encoding UTF8 -Force

          Write-Output "README_BUILT=$outputPath"
          Write-Output "EVIDENCE_FILE=$jsonPath"

      - name: 🧾 Commit updated README (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if (git diff --quiet README.md) {
            Write-Output "No changes detected in README.md — skipping commit."
          }
          else {
            git add README.md docs/_evidence/
            git commit -m "🪶 Auto-update README from template (${{ github.sha }}) [skip ci]" || exit 0
            git push
          }

      - name: 📦 Upload Evidence Artifact
        uses: actions/upload-artifact@v4
        with:
          name: readme-build-evidence
          path: docs/_evidence/ReadmeBuild-*.json

      - name: 🧾 Summary
        run: |
          $gitTag = (git describe --tags --abbrev=0 2>$null) ?? 'v1.0'
          $summary = @"
          ## 🪶 README Build Summary
          - Repository: ${{ github.repository }}
          - Commit: ${{ github.sha }}
          - Version: $gitTag
          - Generated: $(Get-Date -Format 'u')
          - Evidence: docs/_evidence/ReadmeBuild-*.json

          ✅ README rebuilt successfully.
          "@
          $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8
