name: üß© Lint PowerShell

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/**/*.ps1'
      - 'modules/**/*.ps1'
      - '.github/workflows/lint-powershell.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    name: üîç Run PSScriptAnalyzer
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: üß≠ Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup PowerShell
        uses: PowerShell/PowerShell@v1
        with:
          pwsh-version: '7.5.0'

      - name: üì¶ Cache PowerShell modules
        uses: actions/cache@v4
        with:
          path: ~/.local/share/powershell/Modules
          key: ${{ runner.os }}-psmodules-${{ hashFiles('scripts/**/*.ps1', 'modules/**/*.ps1') }}
          restore-keys: |
            ${{ runner.os }}-psmodules-

      - name: üß© Install PSScriptAnalyzer
        run: |
          Install-Module PSScriptAnalyzer -Force -Scope CurrentUser

      - name: üß™ Run analyzer
        id: analyze
        run: |
          $ErrorActionPreference = 'Stop'
          $paths = @('scripts','modules')
          $results = Invoke-ScriptAnalyzer -Path $paths -Recurse -ErrorAction Stop

          if ($results) {
            $errorCount   = ($results | Where-Object { $_.Severity -eq 'Error'   }).Count
            $warningCount = ($results | Where-Object { $_.Severity -eq 'Warning' }).Count

            $results | Format-Table RuleName, Severity, ScriptName, Line, Message | Out-String | Tee-Object lint.log | Write-Output

            if ($errorCount -gt 0 -or $warningCount -gt 0) {
              Write-Error "Lint failed: $errorCount errors, $warningCount warnings"
              exit 1
            }
          }
          else {
            "No lint issues detected." | Tee-Object lint.log | Write-Output
          }

      - name: üì¶ Upload lint log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint.log

      - name: üßæ Summary
        if: always()
        run: |
          $log = Get-Content lint.log -Raw
          $summary = @"
          ## üîç PowerShell Lint Summary
          $log
          "@
          $summary | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8
